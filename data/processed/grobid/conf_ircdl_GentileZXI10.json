{"bibliography":{"title":"Semantic Relatedness Approach for Named Entity Disambiguation","authors":[{"person_name":{"surname":"Gentile","first_name":"Anna"},"affiliations":[{"department":"Department of Computer Science","institution":"University of Bari","laboratory":null}],"email":"al.gentile@di.uniba.it"},{"person_name":{"surname":"Zhang","first_name":"Ziqi"},"affiliations":[{"department":"Department of Computer Science","institution":"The University of Sheffield","laboratory":null}],"email":"z.zhang@dcs.shef.ac.uk"},{"person_name":{"surname":"Xia","first_name":"Lei"},"affiliations":[{"department":"Archaeology Data Service","institution":"University of York","laboratory":null}],"email":"l.xia@dcs.shef.ac.uk"},{"person_name":{"surname":"Iria","first_name":"José"},"affiliations":[{"department":null,"institution":"IBM Research -Zurich","laboratory":null}],"email":null}],"date":null,"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"keywords":[],"citations":{"b0":{"title":"Graph-based Semantic Relatedness for Named Entity Disambiguation","authors":[{"person_name":{"surname":"Gentile","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Zhang","first_name":"Z"},"affiliations":[],"email":null},{"person_name":{"surname":"Xia","first_name":"L"},"affiliations":[],"email":null},{"person_name":{"surname":"Iria","first_name":"J"},"affiliations":[],"email":null}],"date":{"year":"2009","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":13,"to_page":20}}},"b1":{"title":"Two graph-based algorithms for state-of-the-art WSD","authors":[{"person_name":{"surname":"Agirre","first_name":"E"},"affiliations":[],"email":null},{"person_name":{"surname":"Martínez","first_name":"D"},"affiliations":[],"email":null},{"person_name":{"surname":"López De Lacalle","first_name":"O"},"affiliations":[],"email":null},{"person_name":{"surname":"Soroa","first_name":"A"},"affiliations":[],"email":null}],"date":{"year":"2006","month":"07","day":null},"ids":null,"target":null,"publisher":"Association for Computational Linguistics","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":585,"to_page":593}}},"b2":{"title":"Unsupervised large-vocabulary word sense disambiguation with graph-based algorithms for sequence data labeling","authors":[{"person_name":{"surname":"Mihalcea","first_name":"R"},"affiliations":[],"email":null}],"date":{"year":"2005","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"b3":{"title":"Graph connectivity measures for unsupervised word sense disambiguation","authors":[{"person_name":{"surname":"Navigli","first_name":"R"},"affiliations":[],"email":null},{"person_name":{"surname":"Lapata","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2007","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":1683,"to_page":1688}}},"b4":{"title":"Unsupervised Graph-based Word Sense Disambiguation Using Measures of Word Semantic Similarity","authors":[{"person_name":{"surname":"Sinha","first_name":"R"},"affiliations":[],"email":null},{"person_name":{"surname":"Mihalcea","first_name":"R"},"affiliations":[],"email":null}],"date":{"year":"2007","month":null,"day":null},"ids":null,"target":null,"publisher":"IEEE Computer Society","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":363,"to_page":369}}},"b5":{"title":"Using Encyclopedic Knowledge for Named Entity Disambiguation","authors":[{"person_name":{"surname":"Bunescu","first_name":"R"},"affiliations":[],"email":null},{"person_name":{"surname":"Pasca","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2006","month":null,"day":null},"ids":null,"target":null,"publisher":"The Association for Computer Linguistics","journal":null,"series":null,"scope":null},"b6":{"title":"Large-Scale Named Entity Disambiguation Based on Wikipedia Data","authors":[{"person_name":{"surname":"Cucerzan","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2007","month":"06","day":null},"ids":null,"target":null,"publisher":"Association for Computational Linguistics","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":708,"to_page":716}}},"b7":{"title":"Contextual search and name disambiguation in email using graphs","authors":[{"person_name":{"surname":"Minkov","first_name":"E"},"affiliations":[],"email":null},{"person_name":{"surname":"Cohen","first_name":"W"},"affiliations":[],"email":null},{"person_name":{"surname":"Ng","first_name":"A"},"affiliations":[],"email":null}],"date":{"year":"2006","month":null,"day":null},"ids":null,"target":null,"publisher":"ACM","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":27,"to_page":34}}},"b8":{"title":"A probabilistic model for entity disambiguation using relationships","authors":[{"person_name":{"surname":"Kalashnikov","first_name":"D"},"affiliations":[],"email":null},{"person_name":{"surname":"Mehrotra","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2005","month":null,"day":null},"ids":null,"target":null,"publisher":"SDM","journal":null,"series":null,"scope":null},"b9":{"title":"Message Understanding Conference-6: A Brief History","authors":[{"person_name":{"surname":"Grishman","first_name":"R"},"affiliations":[],"email":null},{"person_name":{"surname":"Sundheim","first_name":"B"},"affiliations":[],"email":null}],"date":{"year":"1996","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":466,"to_page":471}}},"b10":{"title":"Exploiting Semantic Role Labeling, WordNet and Wikipedia for Coreference Resolution","authors":[{"person_name":{"surname":"Ponzetto","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Strube","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2006","month":null,"day":null},"ids":null,"target":null,"publisher":"ACL","journal":null,"series":null,"scope":null},"b11":{"title":"WikiRelate! Computing Semantic Relatedness Using Wikipedia","authors":[{"person_name":{"surname":"Strube","first_name":"M"},"affiliations":[],"email":null},{"person_name":{"surname":"Ponzetto","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2006","month":null,"day":null},"ids":null,"target":null,"publisher":"AAAI Press","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":1419,"to_page":1424}}},"b12":{"title":"Analyzing and Accessing Wikipedia as a Lexical Semantic Resource","authors":[{"person_name":{"surname":"Zesch","first_name":"T"},"affiliations":[],"email":null},{"person_name":{"surname":"Gurevych","first_name":"I"},"affiliations":[],"email":null},{"person_name":{"surname":"Mühlhäuser","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2007","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"b13":{"title":"Combining local context and WordNet similarity for word sense identification","authors":[{"person_name":{"surname":"Leacock","first_name":"C"},"affiliations":[],"email":null},{"person_name":{"surname":"Chodorow","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"1998","month":null,"day":null},"ids":null,"target":null,"publisher":"MIT Press","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":265,"to_page":283}}},"b14":{"title":"A proposal to automatically build and maintain gazetteers for Named Entity Recognition by using Wikipedia","authors":[{"person_name":{"surname":"Toral","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Munoz","first_name":"R"},"affiliations":[],"email":null}],"date":{"year":"2006","month":"04","day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"b15":{"title":"Exploiting wikipedia as external knowledge for named entity recognition","authors":[{"person_name":{"surname":"Kazama","first_name":"J"},"affiliations":[],"email":null},{"person_name":{"surname":"Torisawa","first_name":"K"},"affiliations":[],"email":null}],"date":{"year":"2007","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":698,"to_page":707}}},"b16":{"title":"Entity ranking in Wikipedia","authors":[{"person_name":{"surname":"Vercoustre","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Thom","first_name":"J"},"affiliations":[],"email":null},{"person_name":{"surname":"Pehcevski","first_name":"J"},"affiliations":[],"email":null}],"date":{"year":"2008","month":null,"day":null},"ids":null,"target":null,"publisher":"ACM","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":1101,"to_page":1106}}},"b17":{"title":"WibNED: Wikipedia Based Named Entity Disambiguation","authors":[{"person_name":{"surname":"Gentile","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Basile","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Semeraro","first_name":"G"},"affiliations":[],"email":null}],"date":{"year":"2009","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":51,"to_page":59}}},"b18":{"title":"An Adapted Lesk Algorithm for Word Sense Disambiguation Using WordNet","authors":[{"person_name":{"surname":"Banerjee","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Pedersen","first_name":"T"},"affiliations":[],"email":null}],"date":{"year":"2002","month":null,"day":null},"ids":null,"target":null,"publisher":"Springer","journal":null,"series":null,"scope":{"volume":2276,"pages":{"from_page":136,"to_page":145}}},"b19":{"title":"Extracting personal names from emails: Applying named entity recognition to informal text","authors":[{"person_name":{"surname":"Minkov","first_name":"E"},"affiliations":[],"email":null},{"person_name":{"surname":"Wang","first_name":"R"},"affiliations":[],"email":null},{"person_name":{"surname":"Cohen","first_name":"W"},"affiliations":[],"email":null}],"date":{"year":"2005","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"b20":{"title":"Using wiktionary for computing semantic relatedness","authors":[{"person_name":{"surname":"Zesch","first_name":"T"},"affiliations":[],"email":null},{"person_name":{"surname":"Müller","first_name":"C"},"affiliations":[],"email":null},{"person_name":{"surname":"Gurevych","first_name":"I"},"affiliations":[],"email":null}],"date":{"year":"2008","month":null,"day":null},"ids":null,"target":null,"publisher":"AAAI Press","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":861,"to_page":866}}},"b21":{"title":"Extended Gloss Overlaps as a Measure of Semantic Relatedness","authors":[{"person_name":{"surname":"Banerjee","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Pedersen","first_name":"T"},"affiliations":[],"email":null}],"date":null,"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":805,"to_page":810}}},"b22":{"title":"","authors":[{"person_name":{"surname":"Kaufmann","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2003","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"b23":{"title":"Disambiguating noun groupings with respect to WordNet senses","authors":[{"person_name":{"surname":"Resnik","first_name":"P"},"affiliations":[],"email":null}],"date":{"year":"1995","month":null,"day":null},"ids":null,"target":null,"publisher":"ACL","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":54,"to_page":68}}},"b24":{"title":"Fast Methods for Kernel-Based Text Analysis","authors":[{"person_name":{"surname":"Kudo","first_name":"T"},"affiliations":[],"email":null},{"person_name":{"surname":"Matsumoto","first_name":"Y"},"affiliations":[],"email":null}],"date":{"year":"2003","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":24,"to_page":31}}},"b25":{"title":"Semantic relatedness metric for wikipedia concepts based on link analysis and its application to word sense disambiguation","authors":[{"person_name":{"surname":"Turdakov","first_name":"D"},"affiliations":[],"email":null},{"person_name":{"surname":"Velikhov","first_name":"P"},"affiliations":[],"email":null}],"date":{"year":"2008","month":null,"day":null},"ids":null,"target":"org","publisher":null,"journal":null,"series":"SYRCoDIS. CEUR Workshop Proceedings, CEUR-WS.","scope":{"volume":355,"pages":null}},"b26":{"title":"Random walks on graphs: A survey","authors":[{"person_name":{"surname":"Lovász","first_name":"L"},"affiliations":[],"email":null}],"date":{"year":"1996","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"Combinatorics, Paul Erdös is Eighty","series":null,"scope":{"volume":2,"pages":{"from_page":353,"to_page":398}}},"b27":{"title":"Wit: Web people search disambiguation using random walks","authors":[{"person_name":{"surname":"Iria","first_name":"J"},"affiliations":[],"email":null},{"person_name":{"surname":"Xia","first_name":"L"},"affiliations":[],"email":null},{"person_name":{"surname":"Zhang","first_name":"Z"},"affiliations":[],"email":null}],"date":{"year":"2007","month":null,"day":null},"ids":null,"target":null,"publisher":"ACL","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":480,"to_page":483}}},"b28":{"title":"Object-level ranking: bringing order to web objects","authors":[{"person_name":{"surname":"Nie","first_name":"Z"},"affiliations":[],"email":null},{"person_name":{"surname":"Zhang","first_name":"Y"},"affiliations":[],"email":null},{"person_name":{"surname":"Wen","first_name":"J"},"affiliations":[],"email":null},{"person_name":{"surname":"Ma","first_name":"W"},"affiliations":[],"email":null}],"date":{"year":"2005","month":null,"day":null},"ids":null,"target":null,"publisher":"ACM","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":567,"to_page":574}}},"b29":{"title":"Placing search in context: the concept revisited","authors":[{"person_name":{"surname":"Finkelstein","first_name":"L"},"affiliations":[],"email":null},{"person_name":{"surname":"Gabrilovich","first_name":"E"},"affiliations":[],"email":null},{"person_name":{"surname":"Matias","first_name":"Y"},"affiliations":[],"email":null},{"person_name":{"surname":"Rivlin","first_name":"E"},"affiliations":[],"email":null},{"person_name":{"surname":"Solan","first_name":"Z"},"affiliations":[],"email":null},{"person_name":{"surname":"Wolfman","first_name":"G"},"affiliations":[],"email":null},{"person_name":{"surname":"Ruppin","first_name":"E"},"affiliations":[],"email":null}],"date":{"year":"2002","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"ACM Transactions on Information Systems","series":null,"scope":{"volume":20,"pages":{"from_page":116,"to_page":131}}},"b30":{"title":"The anatomy of a large-scale hypertextual web search engine","authors":[{"person_name":{"surname":"Brin","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Page","first_name":"L"},"affiliations":[],"email":null}],"date":{"year":"1998","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null}},"sections":[{"title":"Introduction","paragraphs":[{"text":"Reading a written text implies the comprehension of the information that words are carrying. Comprehension is an intrinsic capacity for a human, but not for a machine. Providing machines with such ability, by anchoring meanings to words, can be considered a task with great significance for Artificial Intelligence.","refs":[]},{"text":"The focus of this work is on proper names, that is, on such words within text that represent entites: we want to give a meaning to such pieces of text that carry high information potential. Many tasks could benefit of such added value, such as Information Retrieval (for example, lots of Web Search queries concern Named Entities).","refs":[]},{"text":"We propose an automatic method to associate a unique sense (the referent, that will be also addressed in the remaining of this work as meaning, concept or simply sense) to each entity (the reference within the text), exploiting Wikipedia 1 ","refs":[]}]},{"title":"As freely available","paragraphs":[{"text":"The work was done while this author was at The University of Sheffield, UK as visiting researcher. The work was done while this author was working at The University of Sheffield, UK. 1 http://en.wikipedia.org/wiki/Wikipedia Knowledge Base, showing a novel solution for Named Entity Disambiguation (NED). We show the correctness of the proposed methodology with two experimental sessions, consolidating results obtained in [1].","refs":[{"start":422,"end":425,"marker":"bibr","target":"#b0"}]},{"text":"Our contributions are twofold. Firstly, we use a random-walk model based Semantic Relatedness approach to NED. Graph-based models have previously been applied to Word Sense Disambiguation (WSD) [2,3,4,5] but not experimented for the problem of NED: to the best of our knowledge, previous approaches to NED were based on Vector Space model, treating concepts and context texts as a bag of words [6,7], while graphbased models have been exploited for a specific type of NED, which is Person Name Disambiguation [8], or for specific domains, such as bibliographic citations [9]. The solution proposed in this work exploits Semantic Relatedness Scores (calculated with a random walk on a graph) as input for disambiguation step. Secondly, we introduce a different way for representing the context for the target entity which, rather than consisting of surrounding words, is composed of only other named entities present in the text. Our approach has the advantage of using relatedness scores independently for the NED task, that means using semantic relations as input for NED: this is useful in terms of clearly separation of two different functions, which can be refined and ameliorated separately one from each other. Compared to the best result by Cucerzan [7], which is an accuracy of 91.4% and of 88.3%, our method achieves a competitive accuracy of 91.5 % and 89.8% respectively and it adds the benefit of having two clearly separate steps (relatedness sores, disambiguation), thus providing a glimpse of improving results in both directions.","refs":[{"start":194,"end":197,"marker":"bibr","target":"#b1"},{"start":197,"end":199,"marker":"bibr","target":"#b2"},{"start":199,"end":201,"marker":"bibr","target":"#b3"},{"start":201,"end":203,"marker":"bibr","target":"#b4"},{"start":394,"end":397,"marker":"bibr","target":"#b5"},{"start":397,"end":399,"marker":"bibr","target":"#b6"},{"start":509,"end":512,"marker":"bibr","target":"#b7"},{"start":571,"end":574,"marker":"bibr","target":"#b8"},{"start":1257,"end":1260,"marker":"bibr","target":"#b6"}]},{"text":"The work is structured as follows: Section 2 proposes an overview of the NED task, with focus on available solutions exploiting Wikipedia. Section 3 presents the proposed NED methodology, describing in details the four designed steps. Section 4 presents the experiments carried out to validate the proposed solution and finally conclusions close the paper.","refs":[]}]},{"title":"Related Work","paragraphs":[{"text":"In Natural Language Processing, Named Entity Disambiguation is the problem of mapping mentions of entities in a text with the object they are referencing. It is a step further from Named Entity Recognition (NER), which involves the identification and classification of so-called named entities: expressions that refer to people, places, organizations, products, companies, and even dates, times, or monetary amounts, as stated in the Message Understanding Conferences (MUC) [10]. The NED process aims to create a mapping between the surface form of an entity and its unique dictionary meaning. It can be assumed to have a dictionary of all possible entity entries. In this work we use Wikipedia as such a dictionary. Many studies that exploit Wikipedia as a knowledge source have recently emerged [11,12,13]. In particular, Wikipedia turned to be very useful for the problem of Named Entities due to its greater coverage than other popular resources, such as WordNet [14] that, resembling more to a dictionary, has little coverage on named entities [12]. Lots of previous works exploited Wikipedia for the task of NER, e.g., to extract gazetteers [15] or as an external knowledge of features to use in a Conditional Random Field NER-tagger [16], to improve entity ranking in the field of Information Retrieval [17]. On the other hand, little has been carried out on the field of NED. The most related works on NED based on Wikipedia are those by Bunescu and Pasca [6] and Cucerzan [7]. Bunescu and Pasca consider the problem of NED as a ranking problem. The authors define a scoring function that takes into account the standard cosine similarity between words in the context of the query and words in the page content of Wikipedia entries, together with correlations between pages learned from the structure of the knowledge source (mostly using Wikipedia Categories assigned to the pages). Their method achieved accuracy between 55.4% and 84.8% [6]. Cucerzan proposes a very similar approach: the vectorial representation of the document is compared with the vectorial representation of the Wikipedia entities. In more details the proposed system represents each entity of Wikipedia as an extended vector with two principal components, corresponding to context and category information; then it builds the same kind of vector for each document. The disambiguation process consists of maximizing the Context Agreement, that is, the overlap between the document vector for the entity to disambiguate and each possible entity vector. The best result for this approach is an accuracy of 91.4% [7]. Both described works are based on the Vector Space Model, which means that a pre-computation on the Wikipedia knowledge resource is needed to build the vector representation. What is more, their methods treat content in a Wikipedia page as a bag-of-words (with the addition of categories information), without taking into account other structural elements in Wikipedia.","refs":[{"start":474,"end":478,"marker":"bibr","target":"#b9"},{"start":797,"end":801,"marker":"bibr","target":"#b10"},{"start":801,"end":804,"marker":"bibr","target":"#b11"},{"start":804,"end":807,"marker":"bibr","target":"#b12"},{"start":967,"end":971,"marker":"bibr","target":"#b13"},{"start":1049,"end":1053,"marker":"bibr","target":"#b11"},{"start":1147,"end":1151,"marker":"bibr","target":"#b14"},{"start":1240,"end":1244,"marker":"bibr","target":"#b15"},{"start":1310,"end":1314,"marker":"bibr","target":"#b16"},{"start":1464,"end":1467,"marker":"bibr","target":"#b5"},{"start":1481,"end":1484,"marker":"bibr","target":"#b6"},{"start":1947,"end":1950,"marker":"bibr","target":"#b5"},{"start":2591,"end":2594,"marker":"bibr","target":"#b6"}]},{"text":"Another method for NED based on Wikipedia is the WibNED algorithm [18]. This method is an adaptation of Lesk dictionary-based WSD algorithm [19], with the difference that in the WibNED algorithm the words to disambiguate are only those representing an entity. WibNED takes as input a document d = {w 1 , . . . , w j , e j+1 , w j+2 , . . . , w h , e h+1 , w h+2 , . . . } and returns a list of Wikipedia URIs X = {s 1 , s 2 , . . . , s k } in which each element s i is obtained by disambiguating the target entity e i on the ground of the information obtained from Wikipedia for each candidate URI (Wikipedia page content of the URI) and words in the context C of e i . The context C of the target entity e i is defined to be a window of n words to the left and another n words to the right, for a total of 2n surrounding words. If other entities occur in the context of the target entity, they are considered as words and not as entities. The main limitation of this approach is that it is merely based on word overlapping and there is no specific weight associated to different categories of words in the context (entities and common words are treated the same way).","refs":[{"start":66,"end":70,"marker":"bibr","target":"#b17"},{"start":140,"end":144,"marker":"bibr","target":"#b18"}]},{"text":"Contrary to these works, we propose a novel method, which uses a graph model combing multiple features extracted from Wikipedia. We calculate Semantic Relatedness over this graph and we exploit obtained relatedness values to resolve the problem of NED.","refs":[]},{"text":"Graph-based models have been applied to a subtask of NED, which is Person Name Disambiguation, usually benefiting from the social networks in people related tasks. Minkov et al. [8] consider extended similarity metrics for documents and other objects embedded in graphs, implemented via a lazy graph walk. They provide an instantiation of this framework for email data, where content, social networks and a timeline are integrated in a structural graph. The suggested framework is evaluated for two email-related problems: disambiguating names in email documents, and threading. Resolving the referent of a person name is also an important complement to the ability to perform named entity extraction for tasks like social network analysis or studies of social interaction in email. The authors model this problem as a search task: based on a namemention in an email message m, they formulate query distribution V q , and then retrieve a ranked list of person nodes. Experiments carried out on the Cspace corpus [20], manually annotated with personal names, show that reranking schemes based on the graph-walk similarity measures often outperform baseline methods, with a maximum accuracy of 83.8%. The main differences between this method and the one we propose within this work is that our method is applicable to all kind of proper names because it does not rely on resources such as social networks and that relatedness scores can be used offline after they have been calculated.","refs":[{"start":178,"end":181,"marker":"bibr","target":"#b7"},{"start":1012,"end":1016,"marker":"bibr","target":"#b19"}]},{"text":"Semantic relatedness between words or concepts measures how much two words or concepts are related by encompassing all kinds of relations between them, such as hypernymy, hyponymy, antonymy and functional relations. There is a large number of literature on computing semantic relatedness between words or concepts using knowledge extracted from Wikipedia, such as [12] and [21]. However, the main limitation of these methods is that they only make use of one or two types of features; and they generally adapt WordNet-based approaches [22,14,23] by employing similar types of features extracted from Wikipedia. In contrast, we believe that other information content and structural elements in Wikipedia can be also useful for the semantic relatedness task; and that combining various features in an integrated model in the semantic relatedness task is crucial for improving performance. For this reason, we propose a random graph walk model based on a combination of features extracted from Wikipedia for computing semantic relatedness.","refs":[{"start":364,"end":368,"marker":"bibr","target":"#b11"},{"start":373,"end":377,"marker":"bibr","target":"#b20"},{"start":535,"end":539,"marker":"bibr","target":"#b21"},{"start":539,"end":542,"marker":"bibr","target":"#b13"},{"start":542,"end":545,"marker":"bibr","target":"#b23"}]}]},{"title":"Methodology","paragraphs":[{"text":"Given a set of surfaces and their corresponding concept relatedness matrix R, our NED algorithm returns for each surface one sense (concept), that is, collectively determined by other surfaces and their corresponding concepts. To achieve this goal the proposed method performs four main sequential steps: 1) each text is reduced to the list of surfaces of appearing entities; 2) for each surface, Wikipedia is used to retrieve all its possible meanings (also denoted as concepts) and build a feature space for each of them; 3) all concepts, their features and relations are transformed into a graph representation: a random graph walk model is then applied to combine the effects of features and derive a relatedness score; 4) for each surface a single meaning is chosen, taking into account Semantic Relation within the entity graph.","refs":[]}]},{"title":"Concept Retrieval","paragraphs":[{"text":"In more details, as a starting point for the proposed methodology we assume that each text has been reduced to the list of its contained named entity surfaces, as it is simply obtainable with a standard NER system, as e.g Yamcha [24]. Then for each surface, Wikipedia is used to retrieve all its possible meanings and build a feature space for each of them. More precisely we query Wikipedia using surface to retrieve relevant pages. If a surface matches an entry in Wikipedia, a page will be returned. If the surface has only one sense defined in Wikipedia then we have a single result: the page describing the concept that matches the surface form. We refer to this page as the sense page for the concept. Alternatively a disambiguation page may be returned if the surface has several senses defined in Wikipedia. Such a page lists different senses as links to other pages and with a short description for each one. For the purpose of this work, we deliberately choose the disambiguation page for every surface, which means we query Wikipedia by adding the string \"(disambiguation)\" to the surface words and follow every link on the page and keep all sense pages for that surface. This is done by appending the keyword \"(disambiguation)\" to a surface as a query. Thus, for every surface, we obtain a number of concepts (represented as sense pages) as input to our disambiguation algorithm. Once we have identified relevant concepts and their sense pages for the input concept surface forms, we use the sense page retrieved from Wikipedia for each concept to build its feature space. We identify the following features that are potentially useful:","refs":[{"start":229,"end":233,"marker":"bibr","target":"#b24"}]},{"text":"1. Words composing the titles of a page (title words): words in the title of a sense page; plus words from all its redirecting links in Wikipedia (different surfaces for the same concept). 2. Top n most frequently used words in the page (frequent words n): prior work makes use of words extracted from the entire page [12], or only those from the first paragraph [21] In our work, we use the most frequent words; based on the intuition that word frequency indicates the importance of the word for representing a topic. 3. Words from categories (cat words) assigned to the page: each page in Wikipedia is assigned several category labels. These labels are organized as a taxonomy. We retrieve the category labels assigned to a page by performing a depth limited search of 2, and split these labels to words. 4. Words from outgoing links on the page (link words): the intuition is that links on the page are more likely to be relevant to the topic, as suggested by Turdakov and Velikhov [25].","refs":[{"start":318,"end":322,"marker":"bibr","target":"#b11"},{"start":363,"end":367,"marker":"bibr","target":"#b20"},{"start":985,"end":989,"marker":"bibr","target":"#b25"}]},{"text":"Thus, for each concept, we extract above features from its sense page, and transform the text features into a graph conforming to the random walk model, which is used to compute Semantic Relatedness between meanings belonging to different surfaces.","refs":[]}]},{"title":"Random Graph Walk Model","paragraphs":[{"text":"A random walk is a formalization of the intuitive idea of taking successive steps in a graph, each in a random direction [26]. Intuitively, the harder it is to arrive at a given node starting from another, the less related the two nodes are. The advantage of a random-walk model lies at its strength of seamlessly combining different features to arrive at one single measure of relatedness between two entities [27]. Specifically, we build an undirected weighted typed graph that encompasses all concepts identified in the page retrieval step and their extracted features. The graph is a 5-tuple G = (V, E, t, l, w), where V is the set of nodes representing the concepts and their features; E : V × V is the set of edges that connect concepts and their features, representing an undirected path from concepts to their features, and vice versa; t : V → T is the node type function (T = {t 1 , . . . , t |T | } is a set of types, e.g., concepts, title words, cat words, . . . ), l : E → L is the edge label function (L = {l 1 , . . . , l |L| } is a set of labels that define relations between concepts and their features), andw : L → R is the label weight function that assigns a weight to an edge. Figure 1 shows a piece of the graph with types and labels described before. Concepts sharing same features will be connected via the edges that connect features and concepts. We define weights for each edge type, which, informally, determine the relevance of each feature to establish the relatedness between any two concepts. Let L t d = l(x, y): (x, y) ∈ E ∩ T (x) = t d be the set of possible labels for edges leaving nodes of type t d . We require that the weights form a probability distribution over L t d , i.e.,","refs":[{"start":121,"end":125,"marker":"bibr","target":"#b26"},{"start":411,"end":415,"marker":"bibr","target":"#b27"},{"start":1204,"end":1205,"marker":"figure","target":"#fig_0"}]},{"text":"We build an adjacency matrix of locally appropriate similarity between nodes as","refs":[]},{"text":"where W ij is the i th -row and j th -column entry of W, indexed by V. The above equation distributes uniformly the weight of edges of the same type leaving a given node.","refs":[]},{"text":"The weight model (wm), that is, weights associated to each type of edges in the graph, has been determined applying a simulated annealing method [28]. The algorithm explores the search space of all possible combinations of feature weights and iteratively reduces the difference between a gold standard solution and that of our system. The algorithm allows us to run our method on one dataset in an iterative manner, where in each iteration, the algorithm generates a random wm for the feature set and scores our system results obtained with that model against the gold standard. If a wm obtained in the current iteration produces better results than the previous, the simulated annealing algorithm will attempt to adjust weights based on that model in next iterations. Thus, by running simulated annealing for relatively large number of iterations, we expect the system performance to converge; by which we obtain the final optimum weight model for that feature set. This tuning has been done in advance using a standard testing dataset for semantic relatedness, the WordSimilarity-353 Test Collection [29], and empirically derived the optimum weight model for our chosen feature set.","refs":[{"start":145,"end":149,"marker":"bibr","target":"#b28"},{"start":1102,"end":1106,"marker":"bibr","target":"#b29"}]},{"text":"To simulate the random walk, we apply matrix transformation using the formula","refs":[]},{"text":"as described by Iria et al. in [27], where D is the diagonal degree matrix given by D ii = k W ik , and t is a parameter representing the number of steps of the random walk. In our work, we have set t = 2 in order to compute the relatedness for walks that start in a concept and traverse one feature to arrive at another concept. Unlike PageRank [30], we are not interested in the stationary behavior of the model. The resulting matrix of this transition P (t) (j | i) is a sparse, non-symmetric matrix filled with probabilities of reaching node i from j after t steps. To transform probability to relatedness, we use the observation that the probability of walking from i to j then coming back to i is always the same as starting from j, reaching i and then coming back to j. Thus we define a transformation function as:","refs":[{"start":31,"end":35,"marker":"bibr","target":"#b27"},{"start":346,"end":350,"marker":"bibr","target":"#b30"}]},{"text":"and we normalize the score to range {0, 1} using:","refs":[]}]},{"title":"Named Entity Disambiguation","paragraphs":[{"text":"The final step of the methodology consists of choosing a single meaning (concept) for each entity surface, exploiting Semantic Relatedness scores derived by the graph. Given S = {s 1 , . . . , s n } the set of surfaces in a document,","refs":[]},{"text":", the set of all their possible senses (concepts) and R the matrix of relatedness Rel(i | j) with each cell indicating the strength of relatedness between concept c i k and concept c j k (where k = k , that is, c i k and c j k have different surface forms), we define the entity disambiguation algorithm as a function f : S → C, that given a set of surfaces S returns the list of disambiguated concepts, using the concept relatedness matrix R. We define different kind of such functions f and compare results in Section 4.","refs":[]},{"text":"As first and simple disambiguation function we define the highest method: we build cand ki the list of candidates winner concepts for each surface, with i being the candidate concept for surface k (k = 1 • • • | S |); if some of surfaces k has more that one candidate winner, for each k surface with multiple i values, we simply pick the concept that among the candidates has the highest value in the matrix R.","refs":[]},{"text":"The combination method calculates for each concept c i k the sum of relatedness with all different concepts c j k from different surfaces (such as j = i, k = k). Given V = {v 1 , . . . , v |C| } the vector of such values, the function returns for each surface s k the concept c i k that has the max v i .","refs":[]},{"text":"The propagation method works as follows: taking as seed the highest similarity value in the matrix R we fix the 2 concepts i and j giving that value: for their surface form k and k we delete rows and columns in the matrix R coming from other concepts for the same surfaces ( all c t k and c t k with t = i and t = j). This step is repeated recursively, picking next highest value in R. The stop condition consists of having one concept row in the matrix R for each surface form.","refs":[]},{"text":"In the following section we present our experiments and evaluation.","refs":[]}]},{"title":"Experiments","paragraphs":[{"text":"We performed the experiment with an \"in vitro evaluation\", which consists of testing systems independently of any application, using specially constructed benchmarks. What we want to prove is that the usage of Semantic Relatedness scores is profitable for the issue of NED and that the graph of interconnections between entities is influent for the disambiguation decision. As benchmark to test our system we used data provided by Cucerzan in [7], which is publicly available2 . Test data consist of two different datasets. Each dataset constists of several documents containing a list of Named Entites, labelled with the corresponding page in Wikipedia. As described in Section 3 we retrieve concepts for each surface and we build a graph with all identified possible concepts for each text. After running the Random Walk on the built graph and transforming the transition matrix in a relatedness matrix we obtain an upper triangular matrix with a score of relatedness between different concepts, belonging to different surfaces.","refs":[{"start":443,"end":446,"marker":"bibr","target":"#b6"},{"start":475,"end":476,"marker":null,"target":"#foot_0"}]},{"text":"The first dataset we used for experiments, that we will refer in what follows as NEWS, consists 20 news stories: for each story it is provided the list of all entities, annotated with the corresponding page in Wikipedia. The number of entities in each story can vary form 10 to 50. Some of the entities have a blank annotation, because they do not have a corresponding page in the Wikipedia collection: among all the identified entities, 370 are significantly annotated in the test data. As input for our system we started from the list of entities spotted in the benchmark data and for each entity the list of all possible meaning is retrieved, e.g., for surface \"Alabama\" following concepts are retrieved:","refs":[]},{"text":"The second dataset, that we will refer in what follows as WIKI, consists of 350 Wikipedia entity pages selected randomly. The text articles contain 5,812 entity surface forms. We performed our evaluation on 3,136 entities, discarding all non-recallable surfaces, that is, all those surfaces having no correspondance in the Wikipedia collection. Indeed, an error analysis carried out by Cucerzan on this dataset showed that it contains many surface forms with erroneous or out-of-date links, as reported in [7].","refs":[{"start":506,"end":509,"marker":"bibr","target":"#b6"}]},{"text":"We evaluate performance in terms of accuracy, that is, the ratio of number of correctly disambiguated entities on total number of entities to disambiguate. Results obtained applying all defined disambiguation functions to the relatedness matrix are shown in table 1 for the NEWS dataset and in table 2 for the WIKI dataset. Both tables also report figures obtained by Cucerzan on the same datasets [7].","refs":[{"start":398,"end":401,"marker":"bibr","target":"#b6"}]},{"text":"In the first experiment the best result equals the best available system at the state of the art, with an accuracy of 91.4% and all proposed functions are above the baseline of 51.7% (baseline returns always the first available result). Between three proposed methods, the combination method obtained the best result, equalling the best available system at the state of the art. The highest method achieves results below the state of the art of 91.4%, even if, with an accuracy of 82.2% is far over the baseline of 51.7% (baseline returns always the first available result). The motivation can be that it takes into account only the best relatedness score for each concept to decide sense assignment, without considering the rest of the scores. The propagation method works even worse because adds to the disadvantage of the first one also the propagation of errors. It reaches an accuracy of 68.7%, which is in the middle between the baseline and the state of the art. To consolidate this result we conducted the same experiment on the WIKI dataset. The second experiment definitively confirms the trend reported in the first one. The three proposed disambiguation functions have the same behavior on the WIKI dataset. The combination method is the best one: it achieves an accuracy of 89.8%, outperforming the accuracy of 88.3% reported by the state-of-the art system. The highest method is between the baseline and the state-of-the-art system, with an accuracy of 87.1%. The propagation method is the worst one: with an accuracy of 84.3% is under the baseline of 86.2%.","refs":[]},{"text":"As expected and already assessed in the NEWS experiment, the combination method performs much better than others, outperforming the state of the art system on the WIKI dataset. The motivation can be found in the fact that it considers relatedness scores in their entirety, giving value to the interaction of all concepts instead of couples of concepts. We consider such value as an encouraging outcome for the proposed novel method: the second experiment reinforces results of the first one, and states the correctness of the proposed methodology.","refs":[]}]},{"title":"Conclusions","paragraphs":[{"text":"In this work we proposed a novel method for Named Entity Disambiguation. Experiments showed that the paradigm achieves significant results: the overall accuracy is 91.5% and 89.8% on two different datasets, which is a result competitive to the state of the art. The successful accuracy reached hints at the usefulness of Semantic Relatedness measures for the process of NED.","refs":[]},{"text":"A consideration must be done on the decision of using Wikipedia as entity inventory: in terms of lexical coverage, especially with reference to specific domains, the choice impose some limitations. It is the case of specific technical areas, such as Medicine, Biology, specific fields of engineering, etc., which can have little or no coverage within the Wikipedia source. However, the methodology is still applicable when the entity inventory is a different Knowledge Base: the only requirement is that we have coverage for entities of interest and that it is possible to calculate relatedness scores between them. We could easily change Wikipedia with a domain ontology, obtaining relatedness scores and then applying the same proposed NED step. Theoretically we might expect this to be true but obviously, experiments are needed to prove the efficacy of such approach and future work can follow this direction. Also, as future work, we plan to design new disambiguation functions over the relatedness matrix to achieve better results.","refs":[]}]}],"tables":{"tab_0":{"heading":"Table 1 .","description":"Comparison of proposed Named Entity Disambiguation Functions on NEWS dataset","rows":[["Literature Systems Accuracy Function Accuracy"],["Cucerzan baseline [7] 51.7%","Highest","82.2%"],["Cucerzan [7]","91.4% Combination 91.5%"],["","","Propagation 68.7%"]]},"tab_1":{"heading":"Table 2 .","description":"Comparison of proposed Named Entity Disambiguation Functions on WIKI dataset","rows":[["Literature Systems Accuracy Function Accuracy"],["Cucerzan baseline [7] 86.2%","Highest","87.1%"],["Cucerzan [7]","88.3% Combination 89.8%"],["","","Propagation 84.3%"]]}},"abstract":{"title":"Abstract","paragraphs":[{"text":"Natural Language is a mean to express and discuss about concepts, objects, events, i.e., it carries semantic contents. One of the ultimate aims of Natural Language Processing techniques is to identify the meaning of the text, providing effective ways to make a proper linkage between textual references and their referents, that is, real world objects. This work addresses the problem of giving a sense to proper names in a text, that is, automatically associating words representing Named Entities with their referents. The proposed methodology for Named Entity Disambiguation is based on Semantic Relatedness Scores obtained with a graph based model over Wikipedia. We show that, without building a Bag of Words representation of the text, but only considering named entities within the text, the proposed paradigm achieves results competitive with the state of the art on two different datasets.","refs":[]}]}}
{"bibliography":{"title":"Automatic Learning of Linguistic Resources for Stopword Removal and Stemming from Text","authors":[{"person_name":{"surname":"Ferilli","first_name":"Stefano"},"affiliations":[{"department":null,"institution":"University of Bari","laboratory":null},{"department":"Centro Interdipartimentale per la Logica e sue Applicazioni","institution":null,"laboratory":null}],"email":"stefano.ferilli@uniba.it"},{"person_name":{"surname":"Esposito","first_name":"Floriana"},"affiliations":[{"department":null,"institution":"University of Bari","laboratory":null}],"email":null},{"person_name":{"surname":"Grieco","first_name":"Domenico"},"affiliations":[{"department":null,"institution":"University of Bari","laboratory":null}],"email":null}],"date":null,"ids":{"DOI":"10.1016/j.procs.2014.10.019","arXiv":null},"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"keywords":["Document processing","Natural language processing","Digital libraries","Linguistic resources"],"citations":{"b0":{"title":"Language identification from text using n-gram based cumulative frequency addition","authors":[{"person_name":{"surname":"Ahmed","first_name":"B"},"affiliations":[],"email":null},{"person_name":{"surname":"Cha","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Tappert","first_name":"C"},"affiliations":[],"email":null}],"date":{"year":"2004","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":12,"to_page":13}}},"b1":{"title":"A simple rule-based Part of Speech tagger","authors":[{"person_name":{"surname":"Brill","first_name":"E"},"affiliations":[],"email":null}],"date":{"year":"1992","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":112,"to_page":116}}},"b2":{"title":"Some advances in transformation-based Part of Speech tagging","authors":[{"person_name":{"surname":"Brill","first_name":"E"},"affiliations":[],"email":null}],"date":{"year":"1994","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":1,"pages":{"from_page":722,"to_page":727}}},"b3":{"title":"Unsupervised learning of disambiguation rules for Part of Speech tagging","authors":[{"person_name":{"surname":"Brill","first_name":"E"},"affiliations":[],"email":null}],"date":{"year":"1995","month":null,"day":null},"ids":null,"target":null,"publisher":"Kluwer","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":1,"to_page":13}}},"b4":{"title":"Learning concept hierarchies from text corpora using formal concept analysis","authors":[{"person_name":{"surname":"Cimiano","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Hotho","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Staab","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2005","month":"08","day":null},"ids":null,"target":null,"publisher":null,"journal":"J. Artif. Int. Res","series":null,"scope":{"volume":24,"pages":{"from_page":305,"to_page":339}}},"b5":{"title":"A survey of grammatical inference methods for natural language learning","authors":[{"person_name":{"surname":"D'ulizia","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Ferri","first_name":"F"},"affiliations":[],"email":null},{"person_name":{"surname":"Grifoni","first_name":"P"},"affiliations":[],"email":null}],"date":{"year":"2012","month":"04","day":null},"ids":null,"target":null,"publisher":null,"journal":"Artificial Intelligence Review","series":null,"scope":{"volume":36,"pages":{"from_page":1,"to_page":27}}},"b6":{"title":"Learning and exploiting concept networks with ConNeKTion","authors":[{"person_name":{"surname":"Rotella","first_name":"F"},"affiliations":[],"email":null},{"person_name":{"surname":"Leuzzi","first_name":"F"},"affiliations":[],"email":null},{"person_name":{"surname":"Ferilli","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2014","month":null,"day":null},"ids":{"DOI":"10.1007/s10489-014-0543-z","arXiv":null},"target":null,"publisher":"Springer","journal":"Applied Intelligence","series":null,"scope":null},"b7":{"title":"Construction of conceptual graph representation of texts","authors":[{"person_name":{"surname":"Hensman","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2004","month":null,"day":null},"ids":null,"target":null,"publisher":"Association for Computational Linguistics","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":49,"to_page":54}}},"b8":{"title":"ConNeKTion: A tool for handling conceptual graphs automatically extracted from text","authors":[{"person_name":{"surname":"Leuzzi","first_name":"F"},"affiliations":[],"email":null},{"person_name":{"surname":"Ferilli","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Rotella","first_name":"F"},"affiliations":[],"email":null}],"date":{"year":"2013","month":null,"day":null},"ids":null,"target":null,"publisher":"Springer-Verlag","journal":null,"series":null,"scope":{"volume":385,"pages":null}},"b9":{"title":"Improving robustness and flexibility of concept taxonomy learning from text","authors":[{"person_name":{"surname":"Leuzzi","first_name":"F"},"affiliations":[],"email":null},{"person_name":{"surname":"Ferilli","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Rotella","first_name":"F"},"affiliations":[],"email":null}],"date":{"year":"2013","month":"04","day":null},"ids":null,"target":null,"publisher":"Springer-Verlag","journal":null,"series":null,"scope":{"volume":7765,"pages":{"from_page":232,"to_page":244}}},"b10":{"title":"Mining ontologies from text","authors":[{"person_name":{"surname":"Maedche","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Staab","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2000","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":189,"to_page":202}}},"b11":{"title":"The text-to-onto ontology learning environment","authors":[{"person_name":{"surname":"Maedche","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Staab","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2000","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"b12":{"title":"Language identification in web pages","authors":[{"person_name":{"surname":"Martins","first_name":"B"},"affiliations":[],"email":null},{"person_name":{"surname":"Silva","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2005","month":null,"day":null},"ids":null,"target":null,"publisher":"ACM","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":764,"to_page":768}}},"b13":{"title":"Language identification using parallel syllable like unit recognition","authors":[{"person_name":{"surname":"Nagarajan","first_name":"T"},"affiliations":[],"email":null},{"person_name":{"surname":"Murthy","first_name":"H"},"affiliations":[],"email":null}],"date":{"year":"2004","month":null,"day":null},"ids":null,"target":null,"publisher":"IEEE","journal":null,"series":null,"scope":{"volume":1,"pages":{"from_page":401,"to_page":401}}},"b14":{"title":"A formal ontology discovery from web documents","authors":[{"person_name":{"surname":"Ogata","first_name":"N"},"affiliations":[],"email":null}],"date":{"year":"2001","month":null,"day":null},"ids":null,"target":null,"publisher":"Springer-Verlag","journal":null,"series":"Lecture Notes on Artificial Intelligence","scope":{"volume":null,"pages":{"from_page":514,"to_page":519}}},"b15":{"title":"An algorithm for suffix stripping","authors":[{"person_name":{"surname":"Porter","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"1980","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"Program","series":null,"scope":{"volume":14,"pages":{"from_page":130,"to_page":137}}},"b16":{"title":"An approach to automated learning of conceptual graphs from text","authors":[{"person_name":{"surname":"Rotella","first_name":"F"},"affiliations":[],"email":null},{"person_name":{"surname":"Ferilli","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Leuzzi","first_name":"F"},"affiliations":[],"email":null}],"date":{"year":"2013","month":null,"day":null},"ids":null,"target":null,"publisher":"Springer","journal":null,"series":"Lecture Notes in Computer Science","scope":{"volume":7906,"pages":{"from_page":341,"to_page":350}}},"b17":{"title":"Learning ontologies from natural language texts","authors":[{"person_name":{"surname":"Shamsfard","first_name":"M"},"affiliations":[],"email":null},{"person_name":{"surname":"Barforoush","first_name":"A"},"affiliations":[],"email":null}],"date":{"year":"2004","month":"01","day":null},"ids":null,"target":null,"publisher":null,"journal":"Int. J. Hum.-Comput. Stud","series":null,"scope":{"volume":60,"pages":{"from_page":17,"to_page":63}}},"b18":{"title":"Evaluation of OntoLearn, a methodology for automatic population of domain ontologies","authors":[{"person_name":{"surname":"Velardi","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Navigli","first_name":"R"},"affiliations":[],"email":null},{"person_name":{"surname":"Cucchiarelli","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Neri","first_name":"F"},"affiliations":[],"email":null}],"date":{"year":"2006","month":null,"day":null},"ids":null,"target":null,"publisher":"IOS Press","journal":null,"series":null,"scope":null}},"sections":[{"title":"Introduction","paragraphs":[{"text":"Although the power and flexibility of new technology (computers, tablets, smartphones, etc.) supports and endorses the spread of multimedia content, text is still the main channel by which information is represented, spread and exchanged by humans. Accordingly, Digital Libraries (DLs for short) have expanded the range of their interests to images, recordings and videos, but the overwhelming majority of their content is still in the form of text. In fact, beyond their perceptual aspects, that are precious for preservation and witnessing purposes, also the meaningful content of sound recordings and images (and sometimes even of portions of images) can be reduced to texts in natural language. It is very likely that this landscape will not change significantly in the future, because natural language is the tool that humans have developed and refined through the millenniums to express their thoughts and exchange notions.","refs":[]},{"text":"The pervasive presence and use of electronic tools and devices has also caused a dramatic growth in the number of available documents. Efficient and effective management of so many documents is already well beyond human capabilities, and this prevents their meaningful control and exploitation. In a sense, having so large quantities of documents is almost like not having documents at all (a problem known as information overloading), unless suitable automatic techniques are developed that can support their organization, indexing and retrieval. Concerning specifically textual content, the Natural Language Processing (NLP) research area aims at developing advanced tools for understanding the components, structure and meaning of sentences in a text, and to properly organize this information as to help human users in satisfying their information needs.","refs":[]},{"text":"All NLP solutions must in the end rely on the use of linguistic (morphological, lexical, grammatical) resources to carry out the most basic processing steps and build on them higher-level functionalities. Since each language has its own peculiarities, the resources developed for a language are useless for the others. Unfortunately, developing these resources is a critical point, for several reasons. Designing and developing them manually requires linguistic experts, whose activity is costly, time-consuming and error-prone. Once the resources are available, it is very hard to maintain and update them, or to tailor them to specific domains, or to fix possible errors. As a result, for many existing languages linguistic resources are not available, which prevents application of automatic high-level processing techniques to support their users. This is especially true for dialects and jargons, whose spread is so limited that nobody is likely to ever produce these resources. A bad consequence of this is the risk that entire cultures might be lost, just because their underlying documents would not be exploitable. Our efforts were spent in this direction, trying to build a system that carries out fully automatic learning of linguistic information and resources starting from plain texts, and provides the users with tools and facilities to navigate and exploit this information for different purposes. A typical use case would be the following: a collection of documents in a language (for which linguistic resources do not exist) is loaded in a DL; the DL itself automatically develops the linguistic resources needed to index and organize these documents, and to recognize future incoming documents as belonging to that language; the collection is indexed and organized using these resources, and the user can query and browse it as he would do in the case of languages for which resources do exist.","refs":[]},{"text":"The BLA-BLA (an acronym for 'Broad-spectrum Language Analysis-Based Learning Application') system currently includes several techniques concerning language identification, stopword removal, term normalization and concept extraction. The learned resources may enable further high-level processing of documents in that language, and/or be taken as a basis for further manual refinements. Whenever more texts become available for the language, it is easy to run again the technique and obtain updated resources. Experimental results show that its application may effectively provide useful linguistic resources in a fully automatic manner. In this paper, we specifically focus on the methodology embedded in BLA-BLA to automatically learn linguistic resources concerning stopword removal and term normalization. These methodologies are general and applicable to any language based on inflection. After recalling some background notions and related work in the next Section, we describe and evaluate the proposed technique in Sections 3 and 4, respectively. Lastly, Section 5 concludes the paper and outlines future work directions.","refs":[]}]},{"title":"Background and Related Work","paragraphs":[{"text":"NLP typically relies on a number of preliminary steps that provide the matter on which higher-level functions can be built. These steps progressively extract from a given text more and more complex features and components, starting from the morphological level, through the lexical one, up to the syntactic one. Recent research on taxonomies, conceptual graphs and ontologies tries even to approach the semantic level. A selection of general and noteworthy tasks is the following:","refs":[]},{"text":"• Language Identification aims at discovering the language in which the text is written, because depending on the language different tools and resources must be used for the following steps;","refs":[]},{"text":"• Stopword Removal since most state-of-the-art NLP techniques work on the lexical level using statistic approaches, this step removes the terms that are widespread and frequent in any kind of text, and hence are not informative about the specific text content (e.g., articles, prepositions, pronouns); • Normalization since most informative terms usually undergo inflection to be used in the sentences, different occurrences of the same term must be standardized to a single form (stemming reports them to their linguistic root, while lemmatization reports them to the basic form of the inflection); • Part-of-Speech Tagging (POS Tagging) associates to each term its grammatical function, useful because different functions act as indicators for different aspects of the content in which high-level processing steps may be interested (e.g., techniques concerned with the content focus on nouns and verbs, while those concerned with sentiments focus on adjectives and adverbs); • Parsing returns the syntactic structure of sentences, usually in the form of a (possibly annotated) syntactic tree, that allows to understand the role of different elements of the sentence with respect to the conveyed message; • Word Sense Disambiguation aims at associating each term in the text to the underlying concept, to attack the synonymy and polysemy problems that affect natural language.","refs":[]},{"text":"As said, each of these steps is typically carried out using suitable (language-specific) linguistic resources. Language Identification often exploits n-gram distribution, Stopword Removal exploits lists of frequent terms, Normalization exploits lists of suffixes 16 , POS Tagging exploits suffixes and/or grammatical rules (e.g., as in Brill 2 ), Parsing uses grammars, Word Sense Disambiguation uses conceptual taxonomies or ontologies. Most works in the literature are concerned with English, probably due to its having a structure which is easier than other languages and to its importance as the standard information interchange language worldwide. Little exists for a few other important languages, and almost nothing for the vast majority of minor languages, especially dialects and jargons.","refs":[{"start":263,"end":265,"marker":"bibr","target":"#b15"}]},{"text":"A few attempts exist to automatically learn resources for Language Identification (in the form of statistics on the distribution of n-grams across the various languages 1,13,143 ), POS Tagging (e.g., by learning tagging rules 3,4 ), Parsing (with the research stream concerning grammar inference 6 ) and Word Sense Disambiguation (with initial attempts to learn concept taxonomies or graphs, or even ontologies, but often based on existing taxonomies/graphs and/or semiautomatically 5,8,11,12,15,18,19 ). Other modules of BLA-BLA have been developed that learn statistics for language identification and conceptual graphs, but are outside the scope of this paper. In particular, the recognition of language relies on statistics about the frequency of n-grams, stopwords and suffixes, to be used by bayesian and/or histogrambased recognition approaches.","refs":[{"start":169,"end":171,"marker":"bibr","target":"#b0"},{"start":171,"end":174,"marker":"bibr","target":"#b12"},{"start":174,"end":177,"marker":"bibr","target":null},{"start":226,"end":228,"marker":"bibr","target":"#b2"},{"start":228,"end":229,"marker":"bibr","target":"#b3"},{"start":296,"end":297,"marker":"bibr","target":"#b5"},{"start":483,"end":485,"marker":"bibr","target":"#b4"},{"start":485,"end":487,"marker":"bibr","target":"#b7"},{"start":487,"end":490,"marker":"bibr","target":"#b10"},{"start":490,"end":493,"marker":"bibr","target":"#b11"},{"start":493,"end":496,"marker":"bibr","target":"#b14"},{"start":496,"end":499,"marker":"bibr","target":"#b17"},{"start":499,"end":501,"marker":"bibr","target":"#b18"}]},{"text":"As regards conceptual graphs, the learning module in charge of this functionality, named ConNeKTion, has already been presented 7,9,10,17 . Most NLP techniques process the text in the form of Bag-of-Words, i.e. considering only the list of terms appearing in the text, possibly associated to weights representing their frequency. Indeed, this setting has proven to be a good trade-off between efficiency and effectiveness in many applications. For instance, document Indexing, which is the foundation for Information Retrieval, can be satisfactorily based on the lexical level alone, and Information Retrieval is one of the most important and urgent needs to organize a DL and make its content available to interested users. For these techniques, the first three steps are sufficient, but unfortunately, except for Language Recognition, nothing can be found in the literature for automatically learning corresponding resources (to the best of our knowledge). This work aims at filling that gap, focusing on the Stopword Removal and Normalization tasks.","refs":[{"start":128,"end":130,"marker":"bibr","target":"#b6"},{"start":130,"end":132,"marker":"bibr","target":"#b8"},{"start":132,"end":135,"marker":"bibr","target":"#b9"},{"start":135,"end":137,"marker":"bibr","target":"#b16"}]}]},{"title":"Learning Approach","paragraphs":[{"text":"Our learning procedure processes a set of input training documents in pure text, each of which is associated to the corresponding language. The pre-processing step proceeds by scanning each document in turn character by character, and skipping all character sequences except words, where a word is defined as a sequence of alphabetic characters only, delimited by blank spaces. Between the initial blank and the first character, and/or between the last character and the final blank, punctuation symbols are allowed (not considered as belonging to the word). The case of an apostrophe joining two words was considered as well. More formally, the linear expression pattern is:","refs":[]},{"text":"is a (possibly empty) sequence of punctuation marks;","refs":[]},{"text":"is the word (hypothesizing a latin alphabet).","refs":[]},{"text":"Our assumption is that each document belongs exactly to one language. This does not mean, of course, that it cannot include words or expressions from other languages, but these are to be considered as noise, and suitably handled by the normal learning approach.","refs":[]}]},{"title":"Stopword Removal","paragraphs":[{"text":"Stopwords are terms in a language that appear so often and pervasively in the documents as to make them irrelevant to distinguish documents with respect to their content. For this reason, they can be safely ignored by all NLP techniques that work at the lexical level. The removal task is simply carried out by lookup in a pre-determined list of keywords. The usual way by which such a list is prepared is including all function words, i.e. terms associated to invariant Parts-of-Speech of the language (usually articles, pronouns and prepositions). However, for domain-specific applications, also other terms that are insignificant in the particular context (e.g., the word 'computer' in a DL specialized in Computer Science) can be added to the list.","refs":[]},{"text":"Of course, in our setting no linguistic information whatever is available for the language. So, we resort to purely statistical considerations to identify stopwords as those terms that appear with a significantly higher frequency than the other words in the training documents. In BLA-BLA, this is obtained by setting a frequency threshold , and in the preliminary prototype this threshold was simply set as the average frequency of all terms collected for the language:","refs":[]},{"text":"where n is the number of terms in the language, t i is the frequency of the i-th term and α is an adjustment factor used to smooth the effect of the average. In the current prototype, 05 . 1 = α was used.","refs":[]}]},{"title":"Normalization","paragraphs":[{"text":"Normalization is usually carried out by finding and removing word suffixes that are connected to inflection, in order to identify and consider different occurrences of the same term independently of their role in the context of the specific sentences in which they are used (e.g., 'computer' and 'computers' convey the same meaning, as well as 'computing' and 'computed'). Again, the suffixes to be searched for must be known a priori and, of course, this implies that linguistic knowledge must be available to compile the list of suffixes. Two kinds of normalization are available: stemming reduces a term to its root, which is not necessarily a meaningful word in the language (e.g., 'computer', 'computers', 'computing' and 'computed' would all be reduced to the same stem 'comput'); lemmatization transforms the term to its basic form, depending on its grammatical type (so, e.g., 'computer' and 'computers' would be changed to 'computer', while 'computing' and 'computed' would be changed to 'compute'). Clearly, lemmatization once again requires linguistic competence to know which is the basic suffix to be used for replacing the inflection suffix. As said, we cannot exploit any a priori linguistic knowledge. So, we focus on stemming, and again use statistical considerations to identify possible stems and suffixes of the language. We first find the stems, i.e. initial parts of the words that are frequently found in the term collection, and then obtain the suffixes by difference. Once learned, these suffixes can be provided to a general suffix stripping algorithm which will apply them to new documents to obtain their normalized version. To find the stems, the list of words is considered and sorted alphabetically. This brings close to each other the words that have the same initial characters. Then the similarity of adjacent pairs of words is computed, and may be graphically represented by a histogram. Note that the presence of prefixes causes different facets of the same meaning (e.g., 'pre-processing' and 'post-processing') to be considered as completely different stems, due to their initial part being very different. Now, we need a way to assess how similar the initial parts of two character sequences are. After trying different solutions, we decided to assess the similarity between two sequences of characters simply based on their longest common initial subsequences. Formally, given two sequences ","refs":[]},{"text":"where ) ' ' , ' ( w w δ is the usual Kronecker function that is 1 if ' w and ' ' w are equal, 0 otherwise. ) , ( ⋅ ⋅ ps takes the least index for which the characters are different, and then subtracts 1 to obtain the greatest index at which the prefix is the same. For instance: ps(decido,decidere) = ps(decidere,decido) = 5 ps(decido,disporre) = ps(disporre,decido) = 1","refs":[]},{"text":"Then, we need to determine which terms have an 'interesting' initial sequence that might be a candidate prefix, stem or suffix. Let","refs":[]},{"text":"a list of sequences of characters, where W is sorted by ascending alphabetic ordering and does not include duplicates. We define a group as a subsequence of W having high prefix similarity, and low prefix similarity with the items in W immediately preceding or following the sequence:","refs":[]},{"text":"where the threshold is currently computed as the average of all similarities between adjacent elements in W , suitably smoothed or amplified by a factor β .","refs":[]}]},{"title":"1","paragraphs":[{"text":") , ( 21","refs":[{"start":6,"end":7,"marker":"formula","target":null}]},{"text":"In the current prototype, we empirically used 0 . 1 = β , obtaining a standard average. Note that, by construction, all the groups that can be found in W are disjoint, because conditions 2 and 3 ensure that the elements in the list immediately preceding and following each group cannot be included in the group. They might be included in a previous or next group, respectively, but they could also be not included in any group, when their similarity with their immediately preceding (respectively, following) element does not fulfill condition 1. So, there can be gaps of unused subsequences that do not concur to extract any group.","refs":[]},{"text":"Each group returns a stem, as the longest subsequence common to all of its elements (see Figure 1 for a sample application of the technique). Suffixes can be then obtained from the words by removing the corresponding stem found in the previous step. Each suffix is associated to a weight given by the product of the number of terms that end with that suffix times the suffix length. This rewards longer suffixes or very frequent ones. Finally, suffixes are ranked by decreasing weight, and only those passing a given threshold are selected. The returned suffixes include the morphological changes due to word inflection. These are the typical suffixes included in the suffix lists commonly used for stemming by suffix stripping. To obtain 'pure' suffixes, which may be of interest for linguistic analysis purposes, the same technique can be applied to the 'extended' suffixes obtained in the previous step as follows. Each suffix is reversed and the list of reversed suffixes is sorted. This brings close to each other the suffixes that have the same final characters. Then the similarity of adjacent pairs of reversed suffixes is computed, and the grouping technique is applied. Summing up, the basic idea is to find in the training corpus many words having the same sequence of initial or final characters. Such sequences are likely to be prefixes/stems or standard suffixes of the language. For instance, one group returned stem 'decid' and suffixes '-e, -er'; another returned stem 'declar' and suffixes '-amus, -ation, -e'. A few considerations are worth concerning the identification of typical prefixes in a language. Differently from suffixes, prefixes do not change the function of a word, rather its meaning (e.g., 'post-processing' means 'processing after', which is a quite different intuition than just 'processing'). So, they are often not stripped by NLP techniques. Nevertheless, identifying prefixes may be useful in some cases: first, obtaining a list of prefixes that are typical for a given language is another useful linguistic resource in its own right; second, because sometimes the NLP technique actually needs to abstract from the specific perspective with which a term is used, and consider only its fundamental meaning (e.g., 'pre-processing', 'processing' and 'post-processing' all basically express the same function that is carried out, albeit in different moments of a procedure). To identify frequent prefixes in a language we apply the same technique as before, working on the list of stems identified in the first step.","refs":[{"start":96,"end":97,"marker":"figure","target":"#fig_0"}]}]},{"title":"Evaluation","paragraphs":[{"text":"The proposed approach was tested on texts taken from several languages. In addition to official languages, having well-defined grammar (English, Italian, French, Latin), also a dialect from a southern Italy town (Squinzano, LE) was considered, for which no grammar, nor (of course) linguistic resource have ever been compiled. All experiments were run on a PC equipped with an Intel Q9450 2.66 GHz 64 bit processor and 2 GB RAM. Two documents were loaded for each language, taken from the Project Gutenberg repository (http://www.gutenberg.com), as reported in the following (along with the associated number of characters/bytes and time to load, including pre-processing): For the dialect, a series of old stories from past centuries for children were loaded, taken from the book 'Cuntame nnu cuntu!' by Anna Messito (unpublished manuscript). The lexical analysis lasted 75 minutes overall, yielding the results shown in Table 1. The learned stopwords were as follows:","refs":[{"start":928,"end":929,"marker":"table","target":"#tab_1"}]},{"text":"• English the, of, and, to, i, a, in, that, was, he, it, my, his, with, me, as, had, for, you, is, be, at, by, not, which, but, they, or, have, their, him, on, were, this, from, all, so, would, are, one, them, some, an, could, what, upon, her, who, about, when, there, we, any, into • French de, la, et, le, a, l, il, un, les, que, d, en, une, qui, est, vous, je, des, qu, dans, du, ne, etait, ce, se, pas, elle, s, sur, n, son, avait, c, au, sa, lui, plus, pour, avec, tout, comme, ses, on, cette, y, ou, dit, mais, par, si, nous, j, me, cela, bien, m, aux, deux, fait • Italian e, di, che, a, il, la, un, non, in, per, si, una, l, con, le, piu, era, ma, da, d, se, del, gli, i, come, della, al, lo, quel, ne, disse, alla, anche, s, aveva, o, quella, cosi, poi, loro, io, suo, cosa, sua, lui, nel, tutto, ci, quando, questo, altro, mi, qualche, renzo, chi, de, ora, all, dell, due, senza, ho, c, ha, uno, tutti, frodo, questa, perche, casa, tempo, ogni","refs":[]},{"text":"• Latin et, in, non, ad, cum, est, quod, ut, qui, atque, esse, ex, se, a, quae, si, ac, quam, neque, sed, ab, aut, de, te, iam, me, his, mihi, quid, caesar, etiam, ne, hoc, sunt, id • Dialect e, te, la, lu, cu, ca, a, se, nu, li, ia, lla, nne, tisse, comu, nnu, llu, pe, nna, le, quandu, ma, rre, ci, era, me, shta, maria, alla, allu, sse, poi, iddhra, lli, jou, puru, tuttu, nthra Almost all stopwords were correct, as confirmed by computing the precision with respect to existing standard stopword lists for those languages (except for dialect, where such a resource is not available). A few exceptions concern common or proper nouns such as: 'frodo', 'renzo', 'casa' in Italian; 'caesar' in Latin; 'tisse', 'rre', 'maria' for dialect † . These cases lead precision to 1.0 for English and French, (72 -3)/72 = 0.96 for Italian, (35 -1)/35 = 0.97 for Latin and (38 -3)/38 = 0.92 for dialect (it is 1.0 for the other languages). While these may seem errors, there is both an explanation and a justification for their presence. The explanation is that there were few documents for each language, and many of them were novels, so the names of the characters (e.g., Frodo and Renzo in Italian, or Maria and 'rre' [= 'king'] in the dialect) are more frequent than expected in general in the language. As regards the dialect, the training texts were stories for children, hence the high frequency of the term 'tisse' [= 'said']. It is expected that adding more (and more varied) training texts will fix these exceptions. The justification is that this behavior is not fully undesirable. Indeed, just because of the same reason expressed above, these terms can be considered domainspecific, and hence so widespread in the documents that their information content is almost null. Thus, it may be considered correct to take them as stopwords. As to word normalization, using the learned suffixes to normalize the terms in the collection, the reduction of the set of words to about 1/10 of the original size confirms that the proposed learning technique is actually effective.","refs":[]},{"text":"As regards prefixes, since they are not fundamental for the purpose of pre-processing the text in order to apply higher-level NLP techniques, we did not run thorough experiments, but just applied the same setting as for the stems. This resulted in a sensible number of prefixes, but a varied quality level depending on the language. English was the best one, but in general the returned suffixes tend to be too long (e.g., des-, del-should be just de-). This can be probably solved by acting on the thresholds, because prefixes must have a much higher frequency than stems.","refs":[]},{"text":"To assess the performance, it would be unfair to compare the performance of our approach to that of grammarbased techniques, since our fundamental assumption is that no knowledge at all is available about the language to be processed. So, we compared the suffixes returned by the system to those in a publicly available resource for English ‡ , including both a general list and a list restricted to most common suffixes. Results for all different thresholds ∈ t [0,707] are very good in terms of Area-Under-Curve: 0.58 AUC-PR and 0.90 AUC-ROC. The average error rate § over all thresholds is 0.03. The best performance was obtained for t = 42, where both Precision and Recall are 0.61. Specifically, for t = 42, 30 suffixes are found, of which 19 appear in the 31-suffixes restricted list.","refs":[]}]},{"title":"Conclusions and Future Work","paragraphs":[{"text":"While multimedia digital documents are progressively spreading, most of the content of Digital Libraries is still in the form of text, and this predominance will probably never be questioned. Except pure display of these documents, all other tasks are based on some kind of Natural Language Processing, that must be supported by suitable linguistic resources. Since these resources are clearly language-specific, they might be unavailable for several languages, and manually building them is costly, time-consuming and error-prone.","refs":[]},{"text":"This paper proposes a methodology to automatically learn linguistic resources for a natural language starting from texts written in that language. The learned resources may enable further high-level processing of documents in that language, and/or be taken as a basis for further manual refinements. Experimental results show that its application may effectively provide useful linguistic resources in a fully automatic manner. Future work will extend and refine the proposed techniques. More experiments will be run to evaluate the performance of high-level NLP tasks based on the learned resources, and to identify more effective parameter settings.","refs":[]}]}],"tables":{"tab_1":{"heading":"Table 1 .","description":"Results of linguistic analysis","rows":[["","English French Italian Latin","Dialect"],["Terms","11 053","20 099 24 008 13 788","5 174"],["Stopwords","54","59","72","35","38"],["Suffixes","188","275","187","220","86"],["Stems","976","2 103","1 770","996","413"],["Reduction (%)","91.17","89.54","92.63","92.78","92.02"],["Prefixes","33","34","69","29","16"]]}},"abstract":{"title":"Abstract","paragraphs":[{"text":"While multimedia digital documents are progressively spreading, most of the content of Digital Libraries is still in the form of text, and this predominance will probably never be questioned. Except pure display of these documents, all other tasks are based on some kind of Natural Language Processing, that must be supported by suitable linguistic resources. Since these resources are clearly language-specific, they might be unavailable for several languages, and manually building them is costly, time-consuming and error-prone. This paper proposes a methodology to automatically learn linguistic resources for a natural language starting from texts written in that language. The learned resources may enable further high-level processing of documents in that language, and/or be taken as a basis for further manual refinements. Experimental results show that its application may effectively provide useful linguistic resources in a fully automatic manner.","refs":[]}]}}
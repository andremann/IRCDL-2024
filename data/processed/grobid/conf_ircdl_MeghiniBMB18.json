{"bibliography":{"title":"A Software Architecture for Narratives","authors":[{"person_name":{"surname":"Meghini","first_name":"Carlo"},"affiliations":[{"department":"Istituto di Scienza e Tecnologie dell'Informazione","institution":"Alessandro Faedo\" -CNR","laboratory":null}],"email":"carlo.meghini@isti.cnr.it"},{"person_name":{"surname":"Bartalesi","first_name":"Valentina"},"affiliations":[{"department":"Istituto di Scienza e Tecnologie dell'Informazione","institution":"Alessandro Faedo\" -CNR","laboratory":null}],"email":"valentina.bartalesi@isti.cnr.it"},{"person_name":{"surname":"Metilli","first_name":"Daniele"},"affiliations":[{"department":"Istituto di Scienza e Tecnologie dell'Informazione","institution":"Alessandro Faedo\" -CNR","laboratory":null}],"email":"daniele.metilli@isti.cnr.it"},{"person_name":{"surname":"Benedetti","first_name":"Filippo"},"affiliations":[{"department":"Istituto di Scienza e Tecnologie dell'Informazione","institution":"Alessandro Faedo\" -CNR","laboratory":null}],"email":"filippo.benedetti@isti.cnr.it"}],"date":null,"ids":{"DOI":"10.1007/978-3-319-73165-0_3","arXiv":null},"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"keywords":["Software architecture","Owl","Semantic web semantic reasoner","Digital libraries","Narratives"],"citations":{"b0":{"title":"Steps towards a formal ontology of narratives based on narratology","authors":[{"person_name":{"surname":"Bartalesi","first_name":"V"},"affiliations":[],"email":null},{"person_name":{"surname":"Meghini","first_name":"C"},"affiliations":[],"email":null},{"person_name":{"surname":"Metilli","first_name":"D"},"affiliations":[],"email":null}],"date":{"year":"2016","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":{"volume":53,"pages":null}},"b1":{"title":"Temporal representation and reasoning in OWL 2","authors":[{"person_name":{"surname":"Batsakis","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Petrakis","first_name":"E"},"affiliations":[],"email":null},{"person_name":{"surname":"Tachmazidis","first_name":"I"},"affiliations":[],"email":null},{"person_name":{"surname":"Antoniou","first_name":"G"},"affiliations":[],"email":null}],"date":{"year":"2016","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"Semant. Web","series":null,"scope":{"volume":8,"pages":{"from_page":981,"to_page":1000}}},"b2":{"title":"The semantic Web","authors":[{"person_name":{"surname":"Berners-Lee","first_name":"T"},"affiliations":[],"email":null},{"person_name":{"surname":"Hendler","first_name":"J"},"affiliations":[],"email":null},{"person_name":{"surname":"Lassila","first_name":"O"},"affiliations":[],"email":null}],"date":{"year":"2001","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"Sci. Am","series":null,"scope":{"volume":284,"pages":{"from_page":28,"to_page":37}}},"b3":{"title":"The CIDOC conceptual reference module: an ontological approach to semantic interoperability of metadata","authors":[{"person_name":{"surname":"Doerr","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2003","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"AI Mag","series":null,"scope":{"volume":24,"pages":{"from_page":75,"to_page":75}}},"b4":{"title":"OWL 2 Web ontology language primer","authors":[{"person_name":{"surname":"Hitzler","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Kr√∂tzsch","first_name":"M"},"affiliations":[],"email":null},{"person_name":{"surname":"Parsia","first_name":"B"},"affiliations":[],"email":null},{"person_name":{"surname":"Patel-Schneider","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Rudolph","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2009","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"W3C Recomm","series":null,"scope":{"volume":27,"pages":{"from_page":123,"to_page":123}}},"b5":{"title":"The OWL API: a Java API for working with OWL 2 ontologies","authors":[{"person_name":{"surname":"Horridge","first_name":"M"},"affiliations":[],"email":null},{"person_name":{"surname":"Bechhofer","first_name":"S"},"affiliations":[],"email":null}],"date":{"year":"2009","month":null,"day":null},"ids":null,"target":"http://dl.acm.org/citation.cfm?id=2890046.2890052","publisher":null,"journal":null,"series":null,"scope":{"volume":529,"pages":{"from_page":49,"to_page":58}}},"b6":{"title":"SWRL: a semantic Web rule language combining OWL and RuleML","authors":[{"person_name":{"surname":"Horrocks","first_name":"I"},"affiliations":[],"email":null},{"person_name":{"surname":"Patel-Schneider","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Boley","first_name":"H"},"affiliations":[],"email":null},{"person_name":{"surname":"Tabet","first_name":"S"},"affiliations":[],"email":null},{"person_name":{"surname":"Grosof","first_name":"B"},"affiliations":[],"email":null},{"person_name":{"surname":"Dean","first_name":"M"},"affiliations":[],"email":null}],"date":{"year":"2004","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":null,"series":null,"scope":null},"b7":{"title":"Using formal narratives in digital libraries","authors":[{"person_name":{"surname":"Meghini","first_name":"C"},"affiliations":[],"email":null},{"person_name":{"surname":"Bartalesi","first_name":"V"},"affiliations":[],"email":null},{"person_name":{"surname":"Metilli","first_name":"D"},"affiliations":[],"email":null}],"date":{"year":"2017","month":null,"day":null},"ids":{"DOI":"10.1007/978-3-319-68130-6_7","arXiv":null},"target":"https://doi.org/10.1007/978-3-319-68130-6","publisher":"Springer","journal":null,"series":null,"scope":{"volume":733,"pages":{"from_page":83,"to_page":94}}},"b8":{"title":"OWL 2 Web ontology language: structural specification and functional-style syntax","authors":[{"person_name":{"surname":"Motik","first_name":"B"},"affiliations":[],"email":null},{"person_name":{"surname":"Patel-Schneider","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Parsia","first_name":"B"},"affiliations":[],"email":null},{"person_name":{"surname":"Bock","first_name":"C"},"affiliations":[],"email":null},{"person_name":{"surname":"Fokoue","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Haase","first_name":"P"},"affiliations":[],"email":null},{"person_name":{"surname":"Hoekstra","first_name":"R"},"affiliations":[],"email":null},{"person_name":{"surname":"Horrocks","first_name":"I"},"affiliations":[],"email":null},{"person_name":{"surname":"Ruttenberg","first_name":"A"},"affiliations":[],"email":null},{"person_name":{"surname":"Sattler","first_name":"U"},"affiliations":[],"email":null}],"date":{"year":"2009","month":null,"day":null},"ids":null,"target":null,"publisher":null,"journal":"W3C Recomm","series":null,"scope":{"volume":27,"pages":{"from_page":159,"to_page":159}}},"b9":{"title":"SPARQL Query Language for RDF","authors":[{"person_name":{"surname":"Prud'hommeaux","first_name":"E"},"affiliations":[],"email":null},{"person_name":{"surname":"Seaborne","first_name":"A"},"affiliations":[],"email":null}],"date":{"year":"2008","month":null,"day":null},"ids":null,"target":"https://www.w3.org/TR/rdf-sparql-query/","publisher":null,"journal":"W3C Recomm","series":null,"scope":null},"b10":{"title":"Linked open data","authors":[{"person_name":{"surname":"Yu","first_name":"L"},"affiliations":[],"email":null}],"date":{"year":"2011","month":null,"day":null},"ids":{"DOI":"10.1007/978-3-642-15970-1_11","arXiv":null},"target":"https://doi.org/10.1007/978-3-642-15970-111","publisher":"Springer","journal":null,"series":null,"scope":{"volume":null,"pages":{"from_page":409,"to_page":466}}}},"sections":[{"title":"Introduction","paragraphs":[{"text":"The search functionalities of the current Digital Libraries (DLs) are usually basic systems that answer to a user's query, expressed in natural language, with a ranked list of the resources included in the DLs but no semantic relations among the returned objects are reported. The Semantic Web [3], and the Linked Open Data [11] paradigm, can overcome the limitations of these search functionalities. The long-term aim of our research is to develop and integrate in DLs a new search method, using the semantic Web technologies: the narrative. We intend narratives as semantic networks composed of events that are linked to the objects of the DL and are endowed with a set of semantic relations connecting these events, i.e. actions or occurrences taking place at a certain time at a specific location. In our vision, instead of list of objects, DLs should provide the narratives as answers of the queries, which could be useful for users in order to obtain a more complete knowledge on the subject of their searches. To reach this aim, we developed a software architecture that allows to create narratives using the Semantic Web technologies. This architecture is composed of a set of tools (automatic and semi-automatic tools) for creating, storing, querying, and visualizing narratives. The stored knowledge is formally represented following an OWL ontology for representing narratives [1] we developed, encoded in the OWL 2 DL profile [5]. In order to maximize its interoperability, our ontology was developed as an extension of the CIDOC CRM standard ontology [4].","refs":[{"start":294,"end":297,"marker":"bibr","target":"#b2"},{"start":324,"end":328,"marker":"bibr","target":"#b10"},{"start":1388,"end":1391,"marker":"bibr","target":"#b0"},{"start":1438,"end":1441,"marker":"bibr","target":"#b4"},{"start":1564,"end":1567,"marker":"bibr","target":"#b3"}]},{"text":"We have created some narratives using this architecture. In particular, two biographical narratives were produced by a Digital Humanities researcher at the Italian National Research Council (CNR): (i) on the life of Dante Alighieri1 , the major Italian poet of the Middle Age; (ii) on the life of the Austrian painter Gustav Klimt2 . The third narrative was developed by a researcher in Computational Biology at the CNR to narrate the discoveries related to the giant squid 3 .","refs":[{"start":231,"end":232,"marker":null,"target":"#foot_0"},{"start":330,"end":331,"marker":null,"target":"#foot_1"},{"start":474,"end":475,"marker":null,"target":"#foot_2"}]},{"text":"Several components of our architecture are already developed and open source, thus we reused them. For what regards the software we developed, we distribute it freely for research aims.","refs":[]}]},{"title":"Architecture","paragraphs":[{"text":"This section describes our current architecture for the representation of narratives. Figure 1 shows the architecture, whose main components are the following:","refs":[{"start":93,"end":94,"marker":"figure","target":"#fig_0"}]},{"text":"1. a narrative-building tool. It is used for creating, modifying or visualizing a narrative, possibly representing knowledge that has been derived by reading some texts. The user operates through the Graphical User Interface (GUI) of the narrative-building tool, by manually inserting the narrative data and, at the same time, importing resources from Wikidata4 . The created narrative is stored as an intermediate JSON representation5 ; 2. an OWL triplifier. Once the narrative is complete, the corresponding JSON representation is given as input to the Java Triplifier. The triplifier transforms the JSON file into an OWL (Web Ontology Language) ontology encoded as an RDF graph, using the OWL API library [6]. The organization of the knowledge in the graph follows the structure defined in the ontology for narratives we developed [1]; 3. a semantic reasoner. It is used by the triplifier to infer new knowledge. The triplifier takes as input also a file with SWRL rules [7] that are used by the reasoner to support the temporal reasoning on the narrative; 4. a triple store. The triplifier stores the resulting graph, expanded with inferences produced by both the reasoner and the SWRL rules, into a Blazegraph triple store 6 ; 5. a visualization interface. Finally, the user can access the knowledge stored in the triple store through a Web interface. The knowledge is extracted using SPARQL queries [10] and shown using graphic libraries.","refs":[{"start":360,"end":361,"marker":null,"target":"#foot_3"},{"start":434,"end":435,"marker":null,"target":"#foot_4"},{"start":708,"end":711,"marker":"bibr","target":"#b5"},{"start":834,"end":837,"marker":"bibr","target":"#b0"},{"start":974,"end":977,"marker":"bibr","target":"#b6"},{"start":1228,"end":1229,"marker":null,"target":"#foot_5"},{"start":1405,"end":1409,"marker":"bibr","target":"#b9"}]},{"text":"A review of approaches relevant to our study is reported in [8].","refs":[{"start":60,"end":63,"marker":"bibr","target":"#b7"}]}]},{"title":"Narrative-Building Tool","paragraphs":[{"text":"In order to facilitate the creation of a narrative and its semantic representation by the narrator, we built a web-based narrative-building tool. The tool is built with HTML57 and JavaScript (ECMAScript68 ), using the jQuery9 , jQuery UI10 , Bootstrap11 , and Typeahead.js12 libraries. The main interface of the tool is based on simple drag-and-drop metaphors, allowing the user to create events and drag the appropriate entities that compose them from a list of entities (e.g. location, person, object) automatically extracted from the Wikidata knowledge base through its SPARQL endpoint. The entities are color-coded according to their class, i.e. person, organization, place, object, concept, or work. These are linked to the corresponding CRM classes by using a specific mapping we defined. The interface also allows the user to link together events by using two different semantic relations: (i) the mereological (part-of) relation, or (ii) the causal dependency relation. A view of the NBVT interface is reported in Fig. 2.","refs":[{"start":174,"end":175,"marker":null,"target":"#foot_6"},{"start":203,"end":204,"marker":null,"target":"#foot_7"},{"start":224,"end":225,"marker":null,"target":"#foot_8"},{"start":237,"end":239,"marker":null,"target":"#foot_9"},{"start":251,"end":253,"marker":null,"target":"#foot_10"},{"start":272,"end":274,"marker":null,"target":"#foot_11"},{"start":1027,"end":1028,"marker":"figure","target":"#fig_1"}]},{"text":"The tool is available online 13 , it is open-source and released under the GPLv3 license14 . As the user inserts knowledge in the interface of the tool, the data is stored into a CouchDB15 database, using the PouchDB16 library to interface with it. This allows automatic saving of the data, revisioning, and synchronization between a local and remote database. Finally, the resulting timeline of events is exported in the JSON format.","refs":[{"start":29,"end":31,"marker":null,"target":"#foot_12"},{"start":88,"end":90,"marker":null,"target":"#foot_13"},{"start":186,"end":188,"marker":null,"target":"#foot_14"},{"start":216,"end":218,"marker":null,"target":"#foot_15"}]}]},{"title":"OWL Triplifier","paragraphs":[{"text":"The knowledge exported from the tool in JSON format is subsequently imported into a Java-based triplifier. The triplifier makes use of the OWL API library to define an ontology model. Then, it loads the JSON file and converts it to an intermediate Java representation. Then the OWL API library takes as input this representation that is used for populating the model. The triplifier also imports some SWRL rules. The Semantic Web Rule Language (SWRL) is a proposed language for the Semantic Web that can be used to express rules as well as logic, combining OWL DL or OWL Lite with a subset of the Rule Markup Language. We added SWRL rules to overcome the limitations of the OWL 2 DL about: (i) the definition of a relation as simultaneously transitive and irreflexive, as in the case of the part-of and causality relations, (ii) the definition of a relation as simultaneously transitive and disjoint [9], as in the case of the temporal relation, (iii) the implication between part-of and temporal relations and between causality and temporal relations. For this reason, we use SWRL rules and OWL 2 DL axioms simultaneously. The SWRL rules were produced using a software developed by Batsakis et al. [2] for what concerns the temporal relations. The implications between part-of and temporal relations and between causality and temporal relations were defined by writing the SWRL rules manually. The SWRL rules are taken as input by the triplifier as an OWL file. The result of the process of triplifier is an OWL graph that represents the narrative, exportable in RDF/XML 17 , Turtle 18 , or several other syntaxes 19 .","refs":[{"start":1199,"end":1202,"marker":"bibr","target":"#b1"}]}]},{"title":"Reasoner","paragraphs":[{"text":"At this point, a reasoning is performed on the knowledge in order to perform consistency checks and make inferences. The reasoner we adopted is Openllet 20 version 2.6. The main reasons for this choice are the following: (i) Openllet supports all the features of OWL 2 DL; (ii) it fully supports SWRL rules; (iii) it is Java-based and easily integrated with OWL API 21 ; (iv) it is an open source software actively maintained. Openllet provides functionality to check consistency of ontologies, compute the classification hierarchy, explain inferences, the graph is stored into a triple store.","refs":[]}]},{"title":"Triple Store","paragraphs":[{"text":"The knowledge is exported to a triple store. The triple store we chose is Blazegraph 22 . Blazegraph is a standards-based, high-performance, scalable, open-source graph database. Written entirely in Java, the platform supports the RDF data model and the SPARQL 1.1 family of specifications, including Query, Update, Basic Federated Query, and Service Description. The knowledge stored in Blazegraph is shown to the user through a visualization interface. We implemented SPARQL queries to retrieve this knowledge from the triple store.","refs":[]}]},{"title":"Visualization Interface","paragraphs":[{"text":"First of all, in order to give a complete overview of the narrative, the events were placed on a timeline. We used TimelineJS library 23 for the implementation. For each event on the timeline, the more meaningful information is reported, i.e. title, date, primary sources, related digital objects, related images. Events occurred at the same time are allowed and visualised on a timeline. Figure 3 shows an event of the timeline of Dante Alighieri's life. Another requirement for the tool is the visualization of the entities that compose each event. To this aim, a SPARQL query to get this information from the knowledge base was implemented. This query retrieves, for each event title, the names and IRIs of the corresponding entities. The vis.js24 JavaScript library was used to implement the visualization. One of the most important requirements for a scholar who studies historical events, is the knowledge of their primary sources. For each event of the narrative, the tool allows to visualize the primary sources and in particular the title and the author of a primary source, the textual fragment of the primary source that describes the event, the reference of the textual fragment. This information is visualized in tabular format. Finally, the user has the possibility to visualize all events that occurred in a specified period of time. Upon specifying the desired period, the user can freely insert the dates using a widget to select a full date or the year only. The results of the query are shown in form of table, where for each event its dates are shown.","refs":[{"start":396,"end":397,"marker":"figure","target":"#fig_2"},{"start":748,"end":750,"marker":null,"target":"#foot_16"}]},{"text":"It is possible to explore the visualization interface on-line25 , browsing the three narratives that are available on our Web site26 .","refs":[{"start":61,"end":63,"marker":null,"target":"#foot_17"},{"start":130,"end":132,"marker":null,"target":"#foot_18"}]}]},{"title":"and Future Work","paragraphs":[{"text":"In this paper we have presented a software architecture for building narratives using the Semantic Web technologies. In this context, we intend narratives as semantic networks of events linked to each other and to digital objects by semantic relations. In order to represent the knowledge we have developed an OWL ontology for narratives as an extension of the CIDOC CRM standard vocabulary.","refs":[]},{"text":"Where possible, to develop this architecture, we have reused software open source already available. For what regards the software we developed, it is freely distributed, released under the GPLv3 license.","refs":[]},{"text":"The long-term goal of our study is introducing the narrative as new first-class search functionality of digital libraries. As output of a query, this new search functionality should not only return a list of objects but it should also present one or more narratives on the topic of the search. The architecture presented in this paper would be used to create narratives that later could be imported and shown in the DL interfaces.","refs":[]}]}],"tables":{},"abstract":{"title":"Abstract","paragraphs":[{"text":"The current Digital Libraries (DLs) usually return as answer of a user's query a ranked list of the resources included in the DLs but no semantic relation among the resources are reported. Using the Semantic Web technologies it is possible to improve these search functionalities introducing narratives as new search method. As narratives we intend semantic networks of events that are linked to the objects of the DLs and are endowed with a set of semantic relations that connect an event to another. These semantic networks may help the users to obtain a more complete knowledge on the subject of their searches. In this paper, we present a software architecture for building narratives in order to introduce them in DLs. Our architecture is composed of several tools (automatic and semi-automatic tools) for creating, storing and visualizing narratives. When possible, we reused open source components already available on-line, and for the software we developed, we freely distribute it for research aims.","refs":[]}]}}